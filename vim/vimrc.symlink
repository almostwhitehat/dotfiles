set nocompatible
set hidden
filetype off

runtime macros/matchit.vim    " Enable % jumping between def / end

" Set terminal colors to 256
set t_Co=256

" Include line numbers
set number

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'SirVer/ultisnips'
Plugin 'Valloric/YouCompleteMe'             " Code completion
Plugin 'VundleVim/Vundle.vim'               " Plugin manager
Plugin 'airblade/vim-gitgutter'             " Shows git status in left gutter
Plugin 'almostwhitehat/vim-textobj-rubyblock'     " Ruby text objects
Plugin 'altercation/vim-colors-solarized'
Plugin 'alvan/vim-closetag'                 " Auto close HTML tags with > and >> for multi-line
Plugin 'blueyed/vim-diminactive'
Plugin 'ctrlpvim/ctrlp.vim'                 " Ctrl+P fuzzy file searcher
Plugin 'gioele/vim-autoswap'                " Stop bugging me about swap files
Plugin 'guns/xterm-color-table.vim'         " Show xterm colors
Plugin 'honza/vim-snippets'
Plugin 'jeffkreeftmeijer/vim-numbertoggle'  " Automatically toggle between relative and absolute line numers
Plugin 'jgdavey/vim-blockle'                " Toggle ruby block types with <leader>b
Plugin 'jiangmiao/auto-pairs'               " Automatically insert or delete parens/quotes in pairs
Plugin 'kana/vim-textobj-user'              " Preerquisite for the vim-textobj-rubyblock
Plugin 'kchmck/vim-coffee-script'
Plugin 'luochen1990/rainbow'                " Rainbow Parentheses
Plugin 'matze/vim-move'                     " Move things
Plugin 'mcmillion/ale'
Plugin 'mileszs/ack.vim'                    " Use ag for searching
Plugin 'miyakogi/conoline.vim'              " Highlights the current line
Plugin 'ngmy/vim-rubocop'		    " Rubocop!
Plugin 'rorymckinley/vim-rubyhash'          " Change ruby hash syntax with rr
Plugin 'scrooloose/nerdtree'                " File browser
Plugin 'svermeulen/vim-easyclip'
Plugin 'tmux-plugins/vim-tmux-focus-events'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-cucumber'                 " Cucumber step definition support
Plugin 'tpope/vim-endwise'                  " Automatically close structures
Plugin 'tpope/vim-eunuch'                   " UNIX commands
Plugin 'tpope/vim-fugitive'                 " Git plugin
Plugin 'tpope/vim-obsession'                " Persistent sessions
Plugin 'tpope/vim-rails'                    " All kinds of rails things
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'                 " Change surrounding parentheses/quotations/etc
Plugin 'tpope/vim-unimpaired'               " I want to be like tpope when I grow up
Plugin 'vim-airline/vim-airline'            " Status bar
Plugin 'vim-airline/vim-airline-themes'     " Themes for airline
Plugin 'vim-ctrlspace/vim-ctrlspace'        " Tab and window management
Plugin 'vim-scripts/rainbow-end'            " rainbow matchers for ruby syntax
Plugin 'wellle/targets.vim'                 " Better text objects
Plugin 'wincent/vim-clipper'                " Integrate with clipper
Plugin 'zhaocai/GoldenView.Vim'             " Auto resize with C-L
" All of your Plugins must be added before the following line
call vundle#end()            " required

" Syntax highlighting
syntax enable
filetype plugin indent on

" Use silver_searcher
set runtimepath^=~/.vim/bundle/ag

" Set tabs to two spaces
set expandtab
set shiftwidth=2
set softtabstop=2
set backspace=indent,eol,start            " allow backspacing over everything in insert mode
set ignorecase smartcase
set gdefault                              " assume the /g flag on :s substitutions to replace all matches in a line

" Automatically close vim if NERDTree is the only thing open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Configure CtrlP
let g:ctrlp_max_files=0
let g:ctrlp_max_depth=40

" Configure status line
set laststatus=2

" Style vim and plugins
colorscheme solarized
set background=dark
let g:airline_theme="solarized"

" bind K to grep word under cursor
nnoremap K :Ack "\b<C-R><C-W>\b"<CR>:cw<CR>

" <Leader>s to replce word under cursor
nnoremap <Leader>s :%s/\<<C-r><C-w>\>/

" Always show at least 5 lines above/below cursor
set scrolloff=5

" Enable cursorline
let g:conoline_auto_enable = 1
let g:conoline_color_normal_dark = 'ctermbg=23 ctermfg=white'
let g:conoline_color_insert_dark = 'ctermbg=30 ctermfg=white'

" Enable Tab and Shift+Tab to indent/unindent code
nnoremap <Tab> >>_
nnoremap <S-Tab> <<_
inoremap <S-Tab> <C-D>
vnoremap <Tab> >gv
vnoremap <S-Tab> <gv

" Show buffers at top
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'

" Don't show trailing whitespace warning in airline
autocmd VimEnter * AirlineToggleWhitespace

" Configure ctrlspace
if executable("ag")
  let g:CtrlSpaceGlobCommand = 'ag -l --nocolor -g ""'
endif
nnoremap <silent><C-p> :CtrlSpace O<CR>

" Use spae as leader
let mapleader = "\<Space>"

" Rubocop auto-correct
noremap <leader>= :!bundle exec rubocop --auto-correct %

" Use 0 to jump to the first non-whitespace character in a line
nmap 0 ^

" jk or kj in insert mode to return to normal and save changes 
imap jk <ESC>:w<CR> 
imap kj <ESC>:w<CR> 

"Ruby is new, and sometimes funtimes
au BufRead,BufNewFile Vagrantfile, Gemfile, Guardfile set filetype=ruby
au BufRead,BufNewFile Gemfile set filetype=ruby
au BufRead,BufNewFile Guardfile set filetype=ruby
au BufRead,BufNewFile .pryrc set filetype=ruby

" Insert pry or remote-pry
nmap <leader>bp orequire 'pry'; binding.pry<esc>^
nmap <leader>brp orequire 'pry'; binding.remote_pry<esc>^

" Show menu for command completion with tab
set wildmenu
set wildmode=list:longest,full

" I should feel bad about this
set mouse=a

" Use w!! for those times when I forget to sudo vim (always)
cnoremap w!! call SudoSaveFile()
function! SudoSaveFile() abort
  execute (has('gui_running') ? '' : 'silent') 'write !env SUDO_EDITOR=tee sudo -e % >/dev/null'
  let &modified = v:shell_error
endfunction

" Configure ack
let g:ackhighlight = 1
let g:ackpreview = 1
nnoremap <Leader>a :Ack <C-R>"

set colorcolumn=101
autocmd Filetype gitcommit setlocal colorcolumn=51

" Use , to repeat least : command
nnoremap , @:

" Reduce character timeouts
set timeoutlen=1000 ttimeoutlen=0

" Set new splits to open to the right and below
set splitbelow
set splitright

let g:goldenview__enable_default_mapping = 0
nmap <silent> <C-L> <Plug>ToggleGoldenViewAutoResize

let g:EasyClipAutoFormat = 1                          " Auto format when pasting
let g:EasyClipAlwaysMoveCursorToEndOfPaste = 1        " After pasting, move cursor to end
let g:EasyClipPreserveCursorPositionAfterYank = 1     " After yanking, move cursor to end
let g:EasyClipShareYanks = 1                          " Persistent yank buffers
let g:EasyClipUseSubstituteDefaults = 1               " Turn on substitutions (with s)

" When in insert mode, Ctrl+p will paste the yank buffer, escape, and re-enter insert mode
inoremap <C-p> <C-r>0

if executable('rg')
  let g:ctrlp_user_command = 'rg --files %s'
  let g:ctrlp_use_caching = 0
  let g:ackprg = 'rg --vimgrep'
  set grepprg=ag\ --nogroup\ --nocolor
endif

let g:diminactive_use_syntax = 1
let g:diminactive_enable_focus = 1
hi ColorColumn ctermbg=236

" Filetypes to auto close HTML tags
let g:closetag_filenames = "*.html,*.xhtml,*.html.erb"

nnoremap <silent> <Leader><right> :vertical resize +15<CR>
nnoremap <silent> <Leader><left> :vertical resize -15<CR>
